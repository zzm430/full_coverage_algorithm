<launch>
    <arg name="id" default="0"/>
    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0.0"/>
    <arg name="yaw" default="0.0"/>

    <!--    Arguments henceforth aren't meant to be configuration arguments. DO NOT CHANGE THEM WHILE INCLUDING
            THIS FILE IN OTHER LAUNCH FILES!!
    -->

    <arg name="frame" default="robot"/>

    <!--    Unique ID of the robot -->
    <arg name="uid" value="$(arg frame)_$(arg id)"/>

    <group ns="$(arg uid)">
        <!--    EKF State Estimation node -->
        <!--    Not required if Gazebo is publishing the odom<->base_link tf -->
        <!--        <include file="$(find filters)/launch/ekf.launch"/>-->


        <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom_tf_broadcaster"
              args="0 0 0 0 0 0 map $(arg uid)/odom"/>

        <node name="interpolator" pkg="tracking_pid" type="path_interpolator">
            <param name="target_x_vel" value="0.25"/>
            <param name="target_yaw_vel" value="0.5"/>
            <remap from="path" to="waypoints"/>
        </node>

        <!--Tracking_pid tries to get the robot as close to it's goal point as possible-->
        <node name="controller" pkg="tracking_pid" type="controller" output="screen">
            <remap from="move_base/cmd_vel" to="cmd_vel"/>
            <remap from="local_trajectory" to="trajectory"/>
            <param name="controller_debug_enabled" value="True"/>
            <param name="track_base_link" value="true"/>
            <param name="base_link_frame" value="$(arg uid)/base_footprint"/>

            <param name="l" value="0.5"/>
            <param name="Ki_long" value="0.0"/>
            <param name="Kp_long" value="2.0"/>
            <param name="Kd_long" value="0.5"/>
            <param name="Ki_lat" value="0.0"/>
            <param name="Kp_lat" value="4.0"/>
            <param name="Kd_lat" value="0.3"/>
        </node>

        <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_$(arg uid)_cov_map_tf_broadcaster"
              args="0 0 0 0 0 0 map $(arg uid)/coverage_grid"/>

        <include file="$(find full_coverage_path_planner)/launch/coverage_progress.launch">
            <arg name="coverage_frame" value="$(arg uid)/base_footprint"/>
            <arg name="map_frame" value="$(arg uid)/coverage_grid"/>
        </include>

    </group>

</launch>